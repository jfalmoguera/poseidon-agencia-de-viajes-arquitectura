export class TplRef {
    constructor(args) {
        this.args = args;
        this.wrapper = null;
        if (this.args.vcr) {
            this.viewRef = this.args.vcr.createEmbeddedView(this.args.tpl, this.args.context || {});
            this.viewRef.detectChanges();
        }
        else {
            this.viewRef = this.args.tpl.createEmbeddedView(this.args.context || {});
            this.viewRef.detectChanges();
            this.args.appRef.attachView(this.viewRef);
        }
    }
    detectChanges() {
        this.viewRef.detectChanges();
    }
    getElement() {
        const rootNodes = this.viewRef.rootNodes;
        if (rootNodes.length === 1 && rootNodes[0] === Node.ELEMENT_NODE) {
            this.element = rootNodes[0];
        }
        else {
            this.element = document.createElement('div');
            this.element.append(...rootNodes);
        }
        return this.element;
    }
    destroy() {
        var _a;
        if (this.viewRef.rootNodes[0] !== 1) {
            (_a = this.element) === null || _a === void 0 ? void 0 : _a.parentNode.removeChild(this.element);
            this.element = null;
        }
        if (!this.args.vcr) {
            this.args.appRef.detachView(this.viewRef);
        }
        this.viewRef.destroy();
        this.viewRef = null;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGUtcmVmLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmduZWF0L292ZXJ2aWV3L3NyYy9saWIvdmlld3MvdGVtcGxhdGUtcmVmLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtCQSxNQUFNLE9BQU8sTUFBTTtJQUtqQixZQUFvQixJQUFhO1FBQWIsU0FBSSxHQUFKLElBQUksQ0FBUztRQUZ6QixZQUFPLEdBQW1CLElBQUksQ0FBQztRQUdyQyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ2pCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDLENBQUM7WUFDeEYsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsQ0FBQztTQUM5QjthQUFNO1lBQ0wsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSyxFQUFRLENBQUMsQ0FBQztZQUNoRixJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxDQUFDO1lBQzdCLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDM0M7SUFDSCxDQUFDO0lBRUQsYUFBYTtRQUNYLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDL0IsQ0FBQztJQUVELFVBQVU7UUFDUixNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQztRQUN6QyxJQUFJLFNBQVMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ2hFLElBQUksQ0FBQyxPQUFPLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQzdCO2FBQU07WUFDTCxJQUFJLENBQUMsT0FBTyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDN0MsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQztTQUNuQztRQUVELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QixDQUFDO0lBRUQsT0FBTzs7UUFDTCxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNuQyxNQUFBLElBQUksQ0FBQyxPQUFPLDBDQUFFLFVBQVUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ25ELElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1NBQ3JCO1FBRUQsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ2xCLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDM0M7UUFFRCxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO0lBQ3RCLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFwcGxpY2F0aW9uUmVmLFxuICBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsXG4gIEVtYmVkZGVkVmlld1JlZixcbiAgSW5qZWN0b3IsXG4gIFRlbXBsYXRlUmVmLFxuICBUeXBlLFxuICBWaWV3Q29udGFpbmVyUmVmLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFZpZXdSZWYgfSBmcm9tICcuL3R5cGVzJztcblxuaW50ZXJmYWNlIEFyZ3M8Qz4ge1xuICB0cGw6IFRlbXBsYXRlUmVmPEM+O1xuICBjb250ZXh0OiBDO1xuICB2Y3I6IFZpZXdDb250YWluZXJSZWYgfCB1bmRlZmluZWQ7XG4gIGFwcFJlZjogQXBwbGljYXRpb25SZWYgfCB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBjbGFzcyBUcGxSZWY8Qz4gaW1wbGVtZW50cyBWaWV3UmVmIHtcbiAgcHJpdmF0ZSB2aWV3UmVmOiBFbWJlZGRlZFZpZXdSZWY8e30+O1xuICBwcml2YXRlIGVsZW1lbnQ6IEVsZW1lbnQ7XG4gIHByaXZhdGUgd3JhcHBlcjogRWxlbWVudCB8IG51bGwgPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgYXJnczogQXJnczxDPikge1xuICAgIGlmICh0aGlzLmFyZ3MudmNyKSB7XG4gICAgICB0aGlzLnZpZXdSZWYgPSB0aGlzLmFyZ3MudmNyLmNyZWF0ZUVtYmVkZGVkVmlldyh0aGlzLmFyZ3MudHBsLCB0aGlzLmFyZ3MuY29udGV4dCB8fCB7fSk7XG4gICAgICB0aGlzLnZpZXdSZWYuZGV0ZWN0Q2hhbmdlcygpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnZpZXdSZWYgPSB0aGlzLmFyZ3MudHBsLmNyZWF0ZUVtYmVkZGVkVmlldyh0aGlzLmFyZ3MuY29udGV4dCB8fCAoe30gYXMgQykpO1xuICAgICAgdGhpcy52aWV3UmVmLmRldGVjdENoYW5nZXMoKTtcbiAgICAgIHRoaXMuYXJncy5hcHBSZWYuYXR0YWNoVmlldyh0aGlzLnZpZXdSZWYpO1xuICAgIH1cbiAgfVxuXG4gIGRldGVjdENoYW5nZXMoKSB7XG4gICAgdGhpcy52aWV3UmVmLmRldGVjdENoYW5nZXMoKTtcbiAgfVxuXG4gIGdldEVsZW1lbnQoKTogRWxlbWVudCB7XG4gICAgY29uc3Qgcm9vdE5vZGVzID0gdGhpcy52aWV3UmVmLnJvb3ROb2RlcztcbiAgICBpZiAocm9vdE5vZGVzLmxlbmd0aCA9PT0gMSAmJiByb290Tm9kZXNbMF0gPT09IE5vZGUuRUxFTUVOVF9OT0RFKSB7XG4gICAgICB0aGlzLmVsZW1lbnQgPSByb290Tm9kZXNbMF07XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgdGhpcy5lbGVtZW50LmFwcGVuZCguLi5yb290Tm9kZXMpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLmVsZW1lbnQ7XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIGlmICh0aGlzLnZpZXdSZWYucm9vdE5vZGVzWzBdICE9PSAxKSB7XG4gICAgICB0aGlzLmVsZW1lbnQ/LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5lbGVtZW50KTtcbiAgICAgIHRoaXMuZWxlbWVudCA9IG51bGw7XG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLmFyZ3MudmNyKSB7XG4gICAgICB0aGlzLmFyZ3MuYXBwUmVmLmRldGFjaFZpZXcodGhpcy52aWV3UmVmKTtcbiAgICB9XG5cbiAgICB0aGlzLnZpZXdSZWYuZGVzdHJveSgpO1xuICAgIHRoaXMudmlld1JlZiA9IG51bGw7XG4gIH1cbn1cbiJdfQ==