{"version":3,"file":"hot-toast.component.d.ts","sources":["hot-toast.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, EventEmitter, Injector, OnDestroy, OnInit } from '@angular/core';\nimport { CreateHotToastRef, HotToastClose, Toast, ToastConfig } from '../../hot-toast.model';\nexport declare class HotToastComponent implements OnInit, AfterViewInit, OnDestroy {\n    private injector;\n    toast: Toast<unknown>;\n    offset: number;\n    defaultConfig: ToastConfig;\n    toastRef: CreateHotToastRef<unknown>;\n    height: EventEmitter<number>;\n    beforeClosed: EventEmitter<any>;\n    afterClosed: EventEmitter<HotToastClose>;\n    private toastBarBase;\n    isManualClose: boolean;\n    context: Record<string, any>;\n    toastComponentInjector: Injector;\n    constructor(injector: Injector);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    get containerPositionStyle(): {\n        left: number;\n        right?: undefined;\n        justifyContent?: undefined;\n        top: number;\n        bottom?: undefined;\n        transform: string;\n    } | {\n        right: number;\n        left?: undefined;\n        justifyContent?: undefined;\n        top: number;\n        bottom?: undefined;\n        transform: string;\n    } | {\n        left: number;\n        right: number;\n        justifyContent: string;\n        top: number;\n        bottom?: undefined;\n        transform: string;\n    } | {\n        left: number;\n        right?: undefined;\n        justifyContent?: undefined;\n        bottom: number;\n        top?: undefined;\n        transform: string;\n    } | {\n        right: number;\n        left?: undefined;\n        justifyContent?: undefined;\n        bottom: number;\n        top?: undefined;\n        transform: string;\n    } | {\n        left: number;\n        right: number;\n        justifyContent: string;\n        bottom: number;\n        top?: undefined;\n        transform: string;\n    };\n    get toastBarBaseStyles(): any;\n    get isIconString(): boolean;\n    close(): void;\n    ngOnDestroy(): void;\n    private isExitAnimation;\n}\n"]}