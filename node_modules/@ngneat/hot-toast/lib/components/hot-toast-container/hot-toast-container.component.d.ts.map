{"version":3,"file":"hot-toast-container.component.d.ts","sources":["hot-toast-container.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, QueryList } from '@angular/core';\nimport { HotToastClose, Toast, ToastConfig, ToastPosition, AddToastRef, CreateHotToastRef } from '../../hot-toast.model';\nimport { HotToastRef } from '../../hot-toast-ref';\nimport { HotToastComponent } from '../hot-toast/hot-toast.component';\nexport declare class HotToastContainerComponent {\n    private cdr;\n    defaultConfig: ToastConfig;\n    hotToastComponentList: QueryList<HotToastComponent>;\n    toasts: Toast<unknown>[];\n    toastRefs: CreateHotToastRef<unknown>[];\n    /** Subject for notifying the user that the toast has been closed. */\n    private _onClosed;\n    private onClosed$;\n    constructor(cdr: ChangeDetectorRef);\n    trackById(index: number, toast: Toast<unknown>): string;\n    calculateOffset(toastId: string, position: ToastPosition): number;\n    updateHeight(height: number, toast: Toast<unknown>): void;\n    addToast<DataType>(ref: HotToastRef): AddToastRef<DataType>;\n    closeToast(id?: string): void;\n    beforeClosed(toast: Toast<unknown>): void;\n    afterClosed(closeToast: HotToastClose): void;\n    hasToast(id: string): boolean;\n    private getAfterClosed;\n    private updateToasts;\n}\n"]}