{"version":3,"file":"ngneat-hot-toast.js","sources":["../../../projects/ngneat/hot-toast/src/lib/constants.ts","../../../projects/ngneat/hot-toast/src/lib/hot-toast-ref.ts","../../../projects/ngneat/hot-toast/src/lib/utils.ts","../projects/ngneat/hot-toast/src/lib/components/hot-toast/hot-toast.component.ts","../projects/ngneat/hot-toast/src/lib/components/hot-toast-container/hot-toast-container.component.ts","../../../projects/ngneat/hot-toast/src/lib/hot-toast.model.ts","../../../projects/ngneat/hot-toast/src/lib/hot-toast.service.ts","../projects/ngneat/hot-toast/src/lib/components/animated-icon/animated-icon.component.ts","../esm2015/lib/projects/ngneat/hot-toast/src/lib/components/indicator/icons/checkmark/checkmark.component.ts","../esm2015/lib/projects/ngneat/hot-toast/src/lib/components/indicator/icons/error/error.component.ts","../esm2015/lib/projects/ngneat/hot-toast/src/lib/components/indicator/icons/loader/loader.component.ts","../projects/ngneat/hot-toast/src/lib/components/indicator/indicator.component.ts","../esm2015/lib/projects/ngneat/hot-toast/src/lib/components/indicator/icons/warning/warning.component.ts","../../../projects/ngneat/hot-toast/src/lib/hot-toast.module.ts","../../../../projects/ngneat/hot-toast/src/public-api.ts","../../../../projects/ngneat/hot-toast/src/ngneat-hot-toast.ts"],"names":[],"mappings":"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","sourcesContent":["import { ToastType } from './hot-toast.model';\n\nexport const HOT_TOAST_DEFAULT_TIMEOUTS: {\n  [key in ToastType]: number;\n} = {\n  blank: 4000,\n  error: 4000,\n  success: 4000,\n  loading: 30000,\n  warning: 4000,\n};\n\nexport const EXIT_ANIMATION_DURATION = 800;\nexport const ENTER_ANIMATION_DURATION = 350;\n\nexport const HOT_TOAST_MARGIN = 8;\n","import { Content } from '@ngneat/overview';\nimport { Observable, race, Subject } from 'rxjs';\nimport { HotToastContainerComponent } from './components/hot-toast-container/hot-toast-container.component';\nimport { HotToastClose, Toast, UpdateToastOptions, HotToastRefProps, DefaultDataType } from './hot-toast.model';\n\nexport class HotToastRef<DataType = DefaultDataType> implements HotToastRefProps<DataType> {\n  updateMessage: (message: Content) => void;\n  updateToast: (options: UpdateToastOptions<DataType>) => void;\n  afterClosed: Observable<HotToastClose>;\n\n  private _dispose: () => void;\n  set dispose(value: () => void) {\n    this._dispose = value;\n  }\n\n  /** Subject for notifying the user that the toast has been closed. */\n  private _onClosed = new Subject<HotToastClose>();\n\n  constructor(private toast: Toast<DataType>) {}\n\n  getToast() {\n    return this.toast;\n  }\n\n  /**Used for internal purpose\n   * Attach ToastRef to container\n   */\n  appendTo(container: HotToastContainerComponent) {\n    const { dispose, updateMessage, updateToast, afterClosed } = container.addToast(this);\n\n    this.dispose = dispose;\n    this.updateMessage = updateMessage;\n    this.updateToast = updateToast;\n    this.afterClosed = race(this._onClosed.asObservable(), afterClosed);\n    return this;\n  }\n\n  /**\n   * Closes the toast\n   *\n   * @param [closeData={ dismissedByAction: false }] -\n   * Make sure to pass { dismissedByAction: true } when closing from template\n   * @memberof HotToastRef\n   */\n  close(closeData: { dismissedByAction: boolean } = { dismissedByAction: false }) {\n    this._dispose();\n    this._onClosed.next({ dismissedByAction: closeData.dismissedByAction, id: this.toast.id });\n    this._onClosed.complete();\n  }\n\n  get data() {\n    return this.toast.data;\n  }\n}\n","export const animate = (element: HTMLElement, value: string) => {\n  element.style.animation = value;\n};\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { isComponent, isTemplateRef } from '@ngneat/overview';\nimport { ENTER_ANIMATION_DURATION, EXIT_ANIMATION_DURATION } from '../../constants';\nimport { HotToastRef } from '../../hot-toast-ref';\nimport { CreateHotToastRef, HotToastClose, Toast, ToastConfig } from '../../hot-toast.model';\nimport { animate } from '../../utils';\n\n@Component({\n  selector: 'hot-toast',\n  templateUrl: 'hot-toast.component.html',\n  styleUrls: ['./hot-toast.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HotToastComponent implements OnInit, AfterViewInit, OnDestroy {\n  @Input() toast: Toast<unknown>;\n  @Input() offset = 0;\n  @Input() defaultConfig: ToastConfig;\n  @Input() toastRef: CreateHotToastRef<unknown>;\n\n  @Output() height = new EventEmitter<number>();\n  @Output() beforeClosed = new EventEmitter();\n  @Output() afterClosed = new EventEmitter<HotToastClose>();\n\n  @ViewChild('hotToastBarBase') private toastBarBase: ElementRef<HTMLElement>;\n\n  isManualClose = false;\n  context: Record<string, any>;\n  toastComponentInjector: Injector;\n\n  constructor(private injector: Injector) {}\n\n  ngOnInit() {\n    if (isTemplateRef(this.toast.message)) {\n      this.context = { $implicit: this.toastRef };\n    }\n    if (isComponent(this.toast.message)) {\n      this.toastComponentInjector = Injector.create({\n        providers: [\n          {\n            provide: HotToastRef,\n            useValue: this.toastRef,\n          },\n        ],\n        parent: this.toast.injector || this.injector,\n      });\n    }\n  }\n\n  ngAfterViewInit() {\n    const nativeElement = this.toastBarBase.nativeElement;\n    setTimeout(() => {\n      this.height.emit(nativeElement.offsetHeight);\n    });\n    nativeElement.addEventListener('animationstart', (ev: AnimationEvent) => {\n      if (this.isExitAnimation(ev)) {\n        this.beforeClosed.emit();\n      }\n    });\n    nativeElement.addEventListener('animationend', (ev: AnimationEvent) => {\n      if (this.isExitAnimation(ev)) {\n        this.afterClosed.emit({ dismissedByAction: this.isManualClose, id: this.toast.id });\n      }\n    });\n  }\n\n  get containerPositionStyle() {\n    const top = this.toast.position.includes('top');\n    const verticalStyle = top ? { top: 0 } : { bottom: 0 };\n\n    const horizontalStyle = this.toast.position.includes('left')\n      ? {\n          left: 0,\n        }\n      : this.toast.position.includes('right')\n      ? {\n          right: 0,\n        }\n      : {\n          left: 0,\n          right: 0,\n          justifyContent: 'center',\n        };\n    return {\n      transform: `translateY(${this.offset * (top ? 1 : -1)}px)`,\n      ...verticalStyle,\n      ...horizontalStyle,\n    };\n  }\n\n  get toastBarBaseStyles() {\n    const top = this.toast.position.includes('top');\n\n    const enterAnimation = `hotToastEnterAnimation${\n      top ? 'Negative' : 'Positive'\n    } ${ENTER_ANIMATION_DURATION}ms cubic-bezier(0.21, 1.02, 0.73, 1) forwards`;\n\n    const exitAnimation = `hotToastExitAnimation${\n      top ? 'Negative' : 'Positive'\n    } ${EXIT_ANIMATION_DURATION}ms forwards cubic-bezier(0.06, 0.71, 0.55, 1) ${this.toast.duration}ms`;\n\n    const animation = this.toast.autoClose ? `${enterAnimation}, ${exitAnimation}` : enterAnimation;\n\n    return { ...this.toast.style, animation };\n  }\n\n  get isIconString() {\n    return typeof this.toast.icon === 'string';\n  }\n\n  close() {\n    this.isManualClose = true;\n    const top = this.toast.position.includes('top');\n\n    const exitAnimation = `hotToastExitAnimation${\n      top ? 'Negative' : 'Positive'\n    } ${EXIT_ANIMATION_DURATION}ms forwards cubic-bezier(0.06, 0.71, 0.55, 1)`;\n\n    const nativeElement = this.toastBarBase.nativeElement;\n\n    animate(nativeElement, exitAnimation);\n  }\n\n  ngOnDestroy() {\n    this.close();\n  }\n\n  private isExitAnimation(ev: AnimationEvent) {\n    return ev.animationName.includes('hotToastExitAnimation');\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Input, QueryList, ViewChildren } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport {\n  HotToastClose,\n  Toast,\n  ToastConfig,\n  ToastPosition,\n  UpdateToastOptions,\n  AddToastRef,\n  CreateHotToastRef,\n} from '../../hot-toast.model';\nimport { HotToastRef } from '../../hot-toast-ref';\nimport { filter } from 'rxjs/operators';\nimport { Content } from '@ngneat/overview';\nimport { HotToastComponent } from '../hot-toast/hot-toast.component';\nimport { HOT_TOAST_MARGIN } from '../../constants';\n\n@Component({\n  selector: 'hot-toast-container',\n  templateUrl: './hot-toast-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HotToastContainerComponent {\n  @Input() defaultConfig: ToastConfig;\n\n  @ViewChildren(HotToastComponent) hotToastComponentList: QueryList<HotToastComponent>;\n\n  toasts: Toast<unknown>[] = [];\n  toastRefs: CreateHotToastRef<unknown>[] = [];\n\n  /** Subject for notifying the user that the toast has been closed. */\n  private _onClosed = new Subject<HotToastClose>();\n\n  private onClosed$ = this._onClosed.asObservable();\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  trackById(index: number, toast: Toast<unknown>) {\n    return toast.id;\n  }\n\n  calculateOffset(toastId: string, position: ToastPosition) {\n    const visibleToasts = this.toasts.filter((t) => t.visible && t.position === position);\n    const index = visibleToasts.findIndex((toast) => toast.id === toastId);\n    const offset =\n      index !== -1\n        ? visibleToasts\n            .slice(...(this.defaultConfig.reverseOrder ? [index + 1] : [0, index]))\n            .reduce((acc, t) => acc + (t.height || 0) + HOT_TOAST_MARGIN, 0)\n        : 0;\n    return offset;\n  }\n\n  updateHeight(height: number, toast: Toast<unknown>) {\n    toast.height = height;\n    this.cdr.detectChanges();\n  }\n\n  addToast<DataType>(ref: HotToastRef): AddToastRef<DataType> {\n    this.toastRefs.push(ref);\n\n    const toast = ref.getToast();\n\n    this.toasts.push(ref.getToast());\n\n    this.cdr.detectChanges();\n\n    return {\n      dispose: () => {\n        this.closeToast(toast.id);\n      },\n      updateMessage: (message: Content) => {\n        toast.message = message;\n        this.cdr.detectChanges();\n      },\n      updateToast: (options: UpdateToastOptions<DataType>) => {\n        this.updateToasts(toast, options);\n        this.cdr.detectChanges();\n      },\n      afterClosed: this.getAfterClosed(toast),\n    };\n  }\n\n  closeToast(id?: string) {\n    if (id) {\n      const comp = this.hotToastComponentList.find((item) => item.toast.id === id);\n      if (comp) {\n        comp.close();\n      }\n    } else {\n      this.hotToastComponentList.forEach((comp) => comp.close());\n    }\n  }\n\n  beforeClosed(toast: Toast<unknown>) {\n    toast.visible = false;\n  }\n\n  afterClosed(closeToast: HotToastClose) {\n    const toastIndex = this.toasts.findIndex((t) => t.id === closeToast.id);\n    if (toastIndex > -1) {\n      this._onClosed.next(closeToast);\n      this.toasts = this.toasts.filter((t) => t.id !== closeToast.id);\n      this.toastRefs = this.toastRefs.filter((t) => t.getToast().id !== closeToast.id);\n      this.cdr.detectChanges();\n    }\n  }\n\n  hasToast(id: string) {\n    return this.toasts.findIndex((t) => t.id === id) > -1;\n  }\n\n  private getAfterClosed(toast: Toast<unknown>) {\n    return this.onClosed$.pipe(filter((v) => v.id === toast.id));\n  }\n\n  private updateToasts(toast: Toast<unknown>, options?: UpdateToastOptions<unknown>) {\n    this.toasts = this.toasts.map((t) => ({ ...t, ...(t.id === toast.id && { ...toast, ...options }) }));\n  }\n}\n","import { Injector } from '@angular/core';\nimport { Content } from '@ngneat/overview';\nimport { Observable } from 'rxjs';\n\nexport class ToastConfig implements DefaultToastOptions {\n  /**\n   * Sets the reverse order for hot-toast stacking\n   *\n   * @default false\n   */\n  reverseOrder = false;\n\n  ariaLive: ToastAriaLive = 'polite';\n  role: ToastRole = 'status';\n  position: ToastPosition = 'top-center';\n  className: string;\n  closeStyle: any;\n  dismissible: boolean;\n  autoClose = true;\n  duration: number;\n  icon: Content;\n  iconTheme: IconTheme;\n  style: any;\n  theme: ToastTheme = 'toast';\n\n  // key in ToastType\n  success: ToastOptions<unknown> & { content?: Content } = { content: '' };\n  error: ToastOptions<unknown> & { content?: Content } = { content: '' };\n  loading: ToastOptions<unknown> & { content?: Content } = { content: '' };\n  blank: ToastOptions<unknown> & { content?: Content } = { content: '' };\n  warning: ToastOptions<unknown> & { content?: Content } = { content: '' };\n}\n\nexport type ToastType = 'success' | 'error' | 'loading' | 'blank' | 'warning';\nexport type ToastPosition = 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\n\nexport type IconTheme = {\n  primary: string;\n  secondary?: string;\n};\n\nexport type ToastTheme = 'toast' | 'snackbar';\n\nexport type ValueFunction<TValue, TArg> = (arg: TArg) => TValue;\nexport type ValueOrFunction<TValue, TArg> = TValue | ValueFunction<TValue, TArg>;\n\nconst isFunction = <TValue, TArg>(\n  valOrFunction: ValueOrFunction<TValue, TArg>\n): valOrFunction is ValueFunction<TValue, TArg> => typeof valOrFunction === 'function';\n\nexport const resolveValueOrFunction = <TValue, TArg>(valOrFunction: ValueOrFunction<TValue, TArg>, arg: TArg): TValue =>\n  isFunction(valOrFunction) ? valOrFunction(arg) : valOrFunction;\n\nexport type ToastRole = 'status' | 'alert';\n\nexport type ToastAriaLive = 'assertive' | 'off' | 'polite';\n\nexport interface Toast<DataType> {\n  type: ToastType;\n\n  /**\n   * Unique id to associate with hot-toast.\n   * There can't be multiple hot-toasts opened with same id.\n   *\n   * @default Date.now().toString()\n   */\n  id: string;\n\n  /** The message to show in the hot-toast. */\n  message: Content;\n\n  /**\n   * Role of the live region.\n   *\n   * @default status\n   */\n  role: ToastRole;\n\n  /** aria-live value for the live region.\n   *\n   * @default polite\n   */\n  ariaLive: ToastAriaLive;\n\n  /**Icon to show in the hot-toast */\n  icon?: Content;\n\n  /**\n   * Duration in milliseconds after which hot-toast will be auto closed.\n   * Can be disabled via `autoClose: false`\n   *\n   * @default 3000 | error = 4000 | loading = 30000\n   */\n  duration?: number;\n\n  /**\n   * Show close button in hot-toast\n   *\n   * @default false\n   */\n  dismissible?: boolean;\n\n  /**\n   * Auto close hot-toast after duration\n   *\n   * @default true\n   */\n  autoClose?: boolean;\n\n  /**Extra styles to apply for hot-toast */\n  style?: any;\n\n  /**Extra CSS classes to be added to the hot toast container. */\n  className?: string;\n\n  /**Use this to change icon color */\n  iconTheme?: IconTheme;\n\n  /**\n   * Visual appearance of hot-toast\n   *\n   * @default toast\n   */\n  theme?: ToastTheme;\n\n  /**\n   * The position to place the hot-toast.\n   *\n   *  @default top-center\n   */\n  position?: ToastPosition;\n\n  /**Extra styles to apply for close button */\n  closeStyle?: any;\n\n  createdAt: number;\n  visible: boolean;\n  height?: number;\n\n  observableMessages?: ObservableMessages<unknown, DataType>;\n\n  /**\n   * Useful when you want to keep a persistance for toast based on ids, across sessions.\n   *\n   * @example\n   * // Lets say you want show hot-toast, with a particular id,\n   * // max 3 times to a user irrespective of browser session.\n   * // In this case you will set this as:\n   * { enabled: true, count: 3 }\n   *\n   * @type {ToastPersistConfig}\n   */\n  persist?: ToastPersistConfig;\n\n  /**\n   * Allows you to pass injector for your component\n   *\n   * @since 1.1.0\n   * @type {Injector}\n   * @memberof Toast\n   */\n  injector?: Injector;\n\n  /**\n   * Allows you to pass data for your component/template\n   *\n   * @since 2.0.0\n   * @type {DataType}\n   * @memberof Toast\n   */\n  data?: DataType;\n}\n\nexport type ToastOptions<DataType> = Partial<\n  Pick<\n    Toast<DataType>,\n    | 'id'\n    | 'icon'\n    | 'duration'\n    | 'dismissible'\n    | 'autoClose'\n    | 'role'\n    | 'ariaLive'\n    | 'className'\n    | 'style'\n    | 'iconTheme'\n    | 'theme'\n    | 'position'\n    | 'closeStyle'\n    | 'persist'\n    | 'injector'\n    | 'data'\n  >\n>;\n\nexport type DefaultToastOptions = ToastOptions<unknown> &\n  {\n    [key in ToastType]?: ToastOptions<unknown> & { content?: Content };\n  };\n\nexport type ObservableLoading<DataType> = {\n  content: Content;\n} & ToastOptions<DataType>;\n\nexport type ObservableSuccessOrError<T, DataType> = {\n  content: ValueOrFunction<Content, T>;\n} & ToastOptions<DataType>;\n\nexport type ObservableMessages<T, DataType> = {\n  loading?: Content | ObservableLoading<DataType>;\n  success: ValueOrFunction<Content, T> | ObservableSuccessOrError<T, DataType>;\n  error?: ValueOrFunction<Content, any> | ObservableSuccessOrError<any, DataType>;\n};\n\nexport interface HotToastServiceMethods {\n  show<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown>;\n  error<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown>;\n  success<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown>;\n  loading<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown>;\n  warning<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown>;\n  observe<T, DataType>(messages: ObservableMessages<T, DataType>): (source: Observable<T>) => Observable<T>;\n  close(id?: string): void;\n}\n\nexport type UpdateToastOptions<DataType> = Partial<\n  Pick<\n    Toast<DataType>,\n    'icon' | 'duration' | 'dismissible' | 'className' | 'style' | 'iconTheme' | 'type' | 'theme' | 'closeStyle'\n  >\n>;\n\nexport interface HotToastRefProps<DataType> {\n  /** Returns all the toast options */\n  getToast: () => Toast<DataType>;\n  dispose: () => void;\n  /**Updates only message */\n  updateMessage: (message: Content) => void;\n  /**Update updatable options of toast */\n  updateToast: (options: UpdateToastOptions<DataType>) => void;\n  /** Observable for notifying the user that the toast has been closed. */\n  afterClosed: Observable<HotToastClose>;\n  /**Closes the toast */\n  close: (closeData?: { dismissedByAction: boolean }) => void;\n  /**\n   * @since 2.0.0\n   */\n  readonly data: DataType;\n}\n\n/** Event that is emitted when a snack bar is dismissed. */\nexport interface HotToastClose {\n  /** Whether the snack bar was dismissed using the action button. */\n  dismissedByAction: boolean;\n  id: string;\n}\n\nexport class ToastPersistConfig {\n  /**\n   *In which storage id vs. counts should be stored\n   *\n   * @type {('local' | 'session')}\n   * @memberof ToastPersistConfig\n   * @default 'local'\n   */\n  storage?: 'local' | 'session' = 'local';\n\n  /**\n   *The key pattern to store object in storage. `${id}` in pattern is replaced with actual toast id.\n   *\n   * @type {('local' | 'session')}\n   * @memberof ToastPersistConfig\n   * @default 'ngneat/hottoast-${id}'\n   */\n  key?: string = 'ngneat/hototast-${id}';\n\n  /**\n   *The number of toasts allowed to show.\n   *\n   * @memberof ToastPersistConfig\n   * @default 1\n   */\n  count? = 1;\n\n  enabled = false;\n}\n\nexport type AddToastRef<DataType> = Pick<\n  HotToastRefProps<DataType>,\n  'afterClosed' | 'dispose' | 'updateMessage' | 'updateToast'\n>;\n\nexport type CreateHotToastRef<DataType> = Omit<Omit<HotToastRefProps<DataType>, 'appendTo'>, 'dispose'>;\n\nexport type DefaultDataType = Record<string, any>;\n","import { isPlatformServer } from '@angular/common';\nimport { Inject, Injectable, Optional, PLATFORM_ID } from '@angular/core';\nimport { CompRef, Content, isComponent, isTemplateRef, ViewService } from '@ngneat/overview';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { HotToastContainerComponent } from './components/hot-toast-container/hot-toast-container.component';\nimport { HOT_TOAST_DEFAULT_TIMEOUTS } from './constants';\nimport { HotToastRef } from './hot-toast-ref';\nimport {\n  CreateHotToastRef,\n  DefaultToastOptions,\n  HotToastServiceMethods,\n  ObservableLoading,\n  ObservableMessages,\n  ObservableSuccessOrError,\n  resolveValueOrFunction,\n  Toast,\n  ToastConfig,\n  ToastOptions,\n  ToastPersistConfig,\n  ToastType,\n  UpdateToastOptions,\n  ValueOrFunction,\n} from './hot-toast.model';\n\n@Injectable({ providedIn: 'root' })\nexport class HotToastService implements HotToastServiceMethods {\n  private _isInitialized = false;\n  private _componentRef: CompRef<HotToastContainerComponent>;\n\n  private _defaultConfig = new ToastConfig();\n  get defaultConfig() {\n    return this._defaultConfig;\n  }\n  set defaultConfig(config: ToastConfig) {\n    this._defaultConfig = {\n      ...this._defaultConfig,\n      ...config,\n    };\n    if (this._componentRef) {\n      this._componentRef.setInput('defaultConfig', this._defaultConfig);\n    }\n  }\n  private _defaultPersistConfig = new ToastPersistConfig();\n\n  constructor(\n    private _viewService: ViewService,\n    @Inject(PLATFORM_ID) private platformId: string,\n    @Optional() config: ToastConfig\n  ) {\n    if (config) {\n      this._defaultConfig = {\n        ...this._defaultConfig,\n        ...config,\n      };\n    }\n  }\n\n  /**\n   * Opens up an hot-toast without any pre-configurations\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  show<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown> {\n    const toast = this.createToast<DataType>(message || this._defaultConfig.blank.content, 'blank', {\n      ...this._defaultConfig,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   * Opens up an hot-toast with pre-configurations for error state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  error<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown> {\n    const toast = this.createToast<DataType>(message || this._defaultConfig.error.content, 'error', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.error,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   * Opens up an hot-toast with pre-configurations for success state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  success<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown> {\n    const toast = this.createToast<DataType>(message || this._defaultConfig.success.content, 'success', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.success,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   * Opens up an hot-toast with pre-configurations for loading state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  loading<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown> {\n    const toast = this.createToast<DataType>(message || this._defaultConfig.loading.content, 'loading', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.loading,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   * Opens up an hot-toast with pre-configurations for warning state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  warning<DataType>(message?: Content, options?: ToastOptions<DataType>): CreateHotToastRef<DataType | unknown> {\n    const toast = this.createToast<DataType>(message || this._defaultConfig.warning.content, 'warning', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.warning,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   *\n   *  Opens up an hot-toast with pre-configurations for loading initially and then changes state based on messages\n   *\n   * @template T Type of observable\n   * @param messages Messages for each state i.e. loading, success and error\n   * @returns\n   * @memberof HotToastService\n   */\n  observe<T, DataType>(messages: ObservableMessages<T, DataType>): (source: Observable<T>) => Observable<T> {\n    return (source) => {\n      let toastRef: CreateHotToastRef<DataType | unknown>;\n      let start = 0;\n\n      const loadingContent = messages.loading || this._defaultConfig.loading?.content;\n      const errorContent = messages.error || this._defaultConfig.error?.content;\n\n      if (loadingContent) {\n        toastRef = this.createLoadingToast<T, DataType>(loadingContent);\n        start = Date.now();\n      }\n\n      return source.pipe(\n        tap({\n          next: (val) => {\n            toastRef = this.createOrUpdateToast<T, DataType | unknown>(\n              messages,\n              val,\n              toastRef,\n              'success',\n              start === 0 ? start : Date.now() - start\n            );\n          },\n          ...(errorContent && {\n            error: (e) => {\n              toastRef = this.createOrUpdateToast<T, DataType | unknown>(\n                messages,\n                e,\n                toastRef,\n                'error',\n                start === 0 ? start : Date.now() - start\n              );\n            },\n          }),\n        })\n      );\n    };\n  }\n\n  /**\n   * Closes the hot-toast\n   *\n   * @param [id] - ID of the toast\n   * @since 3.0.1 - If ID is not provided, all toasts will be closed\n   */\n  close(id?: string) {\n    if (this._componentRef) {\n      this._componentRef.ref.instance.closeToast(id);\n    }\n  }\n\n  /**\n   * Used for internal purpose only.\n   * Creates a container component and attaches it to document.body.\n   */\n  private init() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    this._componentRef = this._viewService\n      .createComponent(HotToastContainerComponent)\n      .setInput('defaultConfig', this._defaultConfig)\n      .appendTo(document.body);\n  }\n\n  private createOrUpdateToast<T, DataType>(\n    messages: ObservableMessages<T, DataType>,\n    val: unknown,\n    toastRef: CreateHotToastRef<DataType>,\n    type: ToastType,\n    diff: number\n  ) {\n    let content: Content | ValueOrFunction<Content, T> = null;\n    let options: ToastOptions<DataType | unknown> = {};\n    ({ content, options } = this.getContentAndOptions<any, DataType>(\n      type,\n      messages[type] || (this._defaultConfig[type] ? this._defaultConfig[type].content : '')\n    ));\n    content = resolveValueOrFunction(content, val);\n    if (toastRef) {\n      toastRef.updateMessage(content);\n      const updatedOptions: UpdateToastOptions<DataType> = {\n        type,\n        duration: diff + HOT_TOAST_DEFAULT_TIMEOUTS[type],\n        ...options,\n        ...(options.duration && { duration: diff + options.duration }),\n      };\n      toastRef.updateToast(updatedOptions);\n    } else {\n      this.createToast<DataType, T>(content, type, options);\n    }\n    return toastRef;\n  }\n\n  private createToast<DataType, T = unknown>(\n    message: Content,\n    type: ToastType,\n    options?: DefaultToastOptions,\n    observableMessages?: ObservableMessages<T, DataType>\n  ): CreateHotToastRef<DataType | unknown> {\n    if (!this._isInitialized) {\n      this._isInitialized = true;\n      this.init();\n    }\n\n    const now = Date.now();\n    const id = options?.id ?? now.toString();\n\n    if (\n      !this.isDuplicate(id) &&\n      (!options.persist?.enabled || (options.persist?.enabled && this.handleStorageValue(id, options)))\n    ) {\n      const toast: Toast<DataType | unknown> = {\n        ariaLive: options?.ariaLive ?? 'polite',\n        createdAt: now,\n        duration: options?.duration ?? HOT_TOAST_DEFAULT_TIMEOUTS[type],\n        id,\n        message,\n        role: options?.role ?? 'status',\n        type,\n        visible: true,\n        observableMessages: observableMessages ?? undefined,\n        ...options,\n      };\n\n      return new HotToastRef<DataType | unknown>(toast).appendTo(this._componentRef.ref.instance);\n    }\n  }\n\n  /**\n   * Checks whether any toast with same id is present.\n   *\n   * @private\n   * @param id - Toast ID\n   */\n  private isDuplicate(id: string) {\n    return this._componentRef.ref.instance.hasToast(id);\n  }\n\n  /**\n   * Creates an entry in local or session storage with count ${defaultConfig.persist.count}, if not present.\n   * If present in storage, reduces the count\n   * and returns the count.\n   * Count can not be less than 0.\n   */\n  private handleStorageValue(id: string, options: DefaultToastOptions): number {\n    let count = 1;\n    const persist = { ...this._defaultPersistConfig, ...options.persist };\n    const storage: Storage = persist.storage === 'local' ? localStorage : sessionStorage;\n    const key = persist.key.replace(/\\${id}/g, id);\n\n    let item: string | number = storage.getItem(key);\n\n    if (item) {\n      item = parseInt(item, 10);\n      if (item > 0) {\n        count = item - 1;\n      } else {\n        count = item;\n      }\n    } else {\n      count = persist.count;\n    }\n\n    storage.setItem(key, count.toString());\n\n    return count;\n  }\n\n  private getContentAndOptions<T, DataType>(\n    toastType: ToastType,\n    message: Content | ValueOrFunction<Content, T> | ObservableLoading<DataType> | ObservableSuccessOrError<T, DataType>\n  ): { options: ToastOptions<DataType | unknown>; content: Content | ValueOrFunction<Content, T> } {\n    let content: Content | ValueOrFunction<Content, T>;\n    let options: ToastOptions<DataType | unknown> = {\n      ...this._defaultConfig,\n      ...this._defaultConfig[toastType],\n    };\n\n    // typeof message === 'object' won't work, cz TemplateRef's type is object\n    if (typeof message === 'string' || isTemplateRef(message) || isComponent(message)) {\n      content = message;\n    } else {\n      let restOptions: ToastOptions<DataType>;\n      ({ content, ...restOptions } = message as ObservableLoading<DataType> | ObservableSuccessOrError<T, DataType>);\n      options = { ...options, ...restOptions };\n    }\n\n    return { content, options };\n  }\n\n  private createLoadingToast<T, DataType>(messages: Content | ObservableLoading<DataType>) {\n    let content: Content | ValueOrFunction<Content, T> = null;\n    let options: ToastOptions<DataType | unknown> = {};\n\n    ({ content, options } = this.getContentAndOptions<any, DataType>('loading', messages));\n\n    return this.loading(content as Content, options);\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-animated-icon',\n  templateUrl: './animated-icon.component.html',\n  styleUrls: ['./animated-icon.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AnimatedIconComponent {\n  @Input() iconTheme: IconTheme;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-checkmark',\n  templateUrl: './checkmark.component.html',\n  styleUrls: ['./checkmark.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckMarkComponent {\n  @Input() theme: IconTheme;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ErrorComponent {\n  @Input() theme: IconTheme;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoaderComponent {\n  @Input() theme: IconTheme;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme, ToastType } from '../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-indicator',\n  templateUrl: 'indicator.component.html',\n  styleUrls: ['./indicator.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IndicatorComponent {\n  @Input() theme: IconTheme;\n  @Input() type: ToastType;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-warning',\n  templateUrl: './warning.component.html',\n  styleUrls: ['./warning.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WarningComponent {\n  @Input() theme: IconTheme;\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { DynamicViewModule } from '@ngneat/overview';\n\nimport { AnimatedIconComponent } from './components/animated-icon/animated-icon.component';\nimport { HotToastComponent } from './components/hot-toast/hot-toast.component';\nimport { CheckMarkComponent } from './components/indicator/icons/checkmark/checkmark.component';\nimport { ErrorComponent } from './components/indicator/icons/error/error.component';\nimport { LoaderComponent } from './components/indicator/icons/loader/loader.component';\nimport { IndicatorComponent } from './components/indicator/indicator.component';\nimport { ToastConfig } from './hot-toast.model';\nimport { HotToastContainerComponent } from './components/hot-toast-container/hot-toast-container.component';\nimport { WarningComponent } from './components/indicator/icons/warning/warning.component';\n\n@NgModule({\n  declarations: [\n    HotToastContainerComponent,\n    HotToastComponent,\n    AnimatedIconComponent,\n    IndicatorComponent,\n    CheckMarkComponent,\n    ErrorComponent,\n    LoaderComponent,\n    WarningComponent,\n  ],\n  imports: [CommonModule, DynamicViewModule],\n  entryComponents: [HotToastContainerComponent],\n})\nexport class HotToastModule {\n  static forRoot(config?: Partial<ToastConfig>): ModuleWithProviders<HotToastModule> {\n    return {\n      ngModule: HotToastModule,\n      providers: [{ provide: ToastConfig, useValue: config }],\n    };\n  }\n}\n","/*\n * Public API Surface of hot-toast\n */\n\nexport * from './lib/hot-toast.service';\nexport * from './lib/hot-toast.module';\nexport * from './lib/hot-toast.model';\nexport * from './lib/hot-toast-ref';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AnimatedIconComponent as ɵc} from './lib/components/animated-icon/animated-icon.component';\nexport {HotToastContainerComponent as ɵa} from './lib/components/hot-toast-container/hot-toast-container.component';\nexport {HotToastComponent as ɵb} from './lib/components/hot-toast/hot-toast.component';\nexport {CheckMarkComponent as ɵe} from './lib/components/indicator/icons/checkmark/checkmark.component';\nexport {ErrorComponent as ɵf} from './lib/components/indicator/icons/error/error.component';\nexport {LoaderComponent as ɵg} from './lib/components/indicator/icons/loader/loader.component';\nexport {WarningComponent as ɵh} from './lib/components/indicator/icons/warning/warning.component';\nexport {IndicatorComponent as ɵd} from './lib/components/indicator/indicator.component';"]}